@model RoomProperties

@{
    Layout = "~/Areas/Panel/Views/Shared/_Layout.cshtml";
}

@{
    var degreeDefault = Model.Degrees.First() != null ? Model.Degrees.First().DegreeId : 0;

    int PageNumber = 1;
    int DegreeId = 0;
    int GradeId = 0;
    int StudyFieldId = 0;
    int RoomTypeId = 0;
    string q = "";

    try { PageNumber = Convert.ToInt32(System.Web.MyHttpContext.Current.Request.Query["pagenumber"]); } catch { PageNumber = 1; }
    PageNumber = PageNumber <= 0 ? 1 : PageNumber;
    try { DegreeId = Convert.ToInt32(System.Web.MyHttpContext.Current.Request.Query["degree"]); } catch { DegreeId = 0; }
    try { GradeId = Convert.ToInt32(System.Web.MyHttpContext.Current.Request.Query["grade"]); } catch { GradeId = 0; }
    try { StudyFieldId = Convert.ToInt32(System.Web.MyHttpContext.Current.Request.Query["studyField"]); } catch { StudyFieldId = 0; }
    try { RoomTypeId = Convert.ToInt32(System.Web.MyHttpContext.Current.Request.Query["roomtype"]); } catch { RoomTypeId = 0; }
    try { q = Convert.ToString(System.Web.MyHttpContext.Current.Request.Query["q"]); } catch { q = ""; }

    degreeDefault = DegreeId > 0 ? DegreeId : degreeDefault;

    string displayNoneGrade = GradeId > 0 ? "" : "displayNone";
    string displayNoneStudyField = StudyFieldId > 0 ? "" : "displayNone";

    int MaxRows = 0;
    try { MaxRows = Convert.ToInt32(ViewData["MaxRows"]); } catch { MaxRows = 0; }


    int CountRow = 10;
    try
    {
        CountRow = Convert.ToInt32(ViewData["CountRow"]);
        CountRow = CountRow <= 0 ? 10 : CountRow;
    }
    catch
    {
        CountRow = 10;
    }

    RoomTeacherOp roomTeacherOp = new RoomTeacherOp();
}

@await Html.PartialAsync("Message", new MessageModel())

<div class="bigbox colorBackWhite colorBorderGray hideOverflow positionRelative">

    <img class="arrow" src="/imagepanel/icons/arrow_down.png" onclick="openBigBox(this)" />

    <form class="form textAlignCenter">

        <div id="diverrors" class="errors textAlignRight">
            <img src="/imagesite/icons/error.png" />
            <p id="errormsg"></p>
            <input type="text" id="focusable" />
        </div>

        <div class="row rowbox">
            <div class="row rowInline2">
                <label class="lbl">روز شروع</label>
                <select id="StartDay" class="chPreviousColor" asp-items="ViewBag.DaysStart"></select>
            </div>

            <div class="row rowInline2">
                <label class="lbl">ماه شروع</label>
                <select id="StartMonth" class="chPreviousColor" asp-items="ViewBag.MonthsStart"></select>
            </div>

            <div class="row rowInline2">
                <label class="lbl">سال شروع</label>
                <input id="StartYear" class="chPreviousColor textAlignLeft directionLtr" type="text" pattern="[0-9]*" inputmode="numeric" placeholder="مثال: 1380" value="@ViewData["StartYear"]" />
            </div>
        </div>

        <div class="row rowbox">
            <div class="row rowInline2">
                <label class="lbl">روز پایان</label>
                <select id="FinishDay" class="chPreviousColor" asp-items="ViewBag.DaysFinish"></select>
            </div>

            <div class="row rowInline2">
                <label class="lbl">ماه پایان</label>
                <select id="FinishMonth" class="chPreviousColor" asp-items="ViewBag.MonthsFinish"></select>
            </div>

            <div class="row rowInline2">
                <label class="lbl">سال پایان</label>
                <input id="FinishYear" class="chPreviousColor textAlignLeft directionLtr" type="text" pattern="[0-9]*" inputmode="numeric" placeholder="مثال: 1380" value="@ViewData["FinishYear"]" />
            </div>
        </div>

        <div class="step opacityOne" id="step1">
            <div class="row rowInline">
                <label class="lbl">مقطع تحصیلی</label>
                <select id="Degree" class="chPreviousColor" onchange="selectCh(this)">
                    <option value="0"></option>
                    @foreach (var degree in Model.Degrees)
                    {

                        bool selected = degree.DegreeId == DegreeId ? true : false;
                        string title = !degree.HasGrade ? "" : degree.DegreeId.ToString() + ",r";
                        if (selected)
                        {
                            <option title="@title" value="@degree.DegreeId" selected="selected">@degree.DegreeTitle</option>
                        }
                        else
                        {

                            <option title="@title" value="@degree.DegreeId">@degree.DegreeTitle</option>
                        }
                    }
                </select>
            </div>

            <div class="row rowInline @displayNoneGrade">
                <label class="lbl">پایه تحصیلی</label>
                <select id="Grade" class="chPreviousColor" onchange="selectCh(this)">
                    <option value="0"></option>
                    @foreach (var grade in Model.Grades)
                    {
                        string className = grade.DegreeId == degreeDefault ? "" : "displayNone";
                        bool selected = grade.GradeId == GradeId ? true : false;
                        string title = !grade.HasStudyField ? grade.DegreeId.ToString() : grade.DegreeId.ToString() + ",r";
                        if (selected)
                        {
                            <option title="@title" value="@grade.GradeId" class="@className" selected="selected">@grade.GradeTitle</option>
                        }
                        else
                        {
                            <option title="@title" value="@grade.GradeId" class="@className">@grade.GradeTitle</option>

                        }
                    }
                </select>
            </div>

            <div class="row rowInline @displayNoneStudyField">
                <label class="lbl">رشته تحصیلی</label>
                <select id="StudyField" class="chPreviousColor">
                    <option value="0"></option>
                    @foreach (var studyfield in Model.StudyFields)
                    {
                        bool selected = studyfield.StudyFieldId == StudyFieldId ? true : false;
                        if (selected)
                        {
                            <option value="@studyfield.StudyFieldId" selected="selected">@studyfield.StudyFieldTitle</option>
                        }
                        else
                        {
                            <option value="@studyfield.StudyFieldId">@studyfield.StudyFieldTitle</option>
                        }
                    }
                </select>
            </div>

            <div class="row rowInline">
                <label class="lbl">نوع کلاس</label>
                <select id="RoomType" class="chPreviousColor">
                    <option value="0"></option>
                    @foreach (var roomtype in Model.RoomTypes)
                    {
                        bool selected = roomtype.RoomTypeId == RoomTypeId ? true : false;
                        if (selected)
                        {
                            <option value="@roomtype.RoomTypeId" selected="selected">@roomtype.RoomTypeTitle</option>
                        }
                        else
                        {
                            <option value="@roomtype.RoomTypeId">@roomtype.RoomTypeTitle</option>
                        }
                    }
                </select>
            </div>

            <div class="row rowInline">
                <label class="lbl">عبارت جستجو</label>
                <input id="q" class="chPreviousColor" type="text" value="@q" />
            </div>

            <div class="row rowInline textAlignLeft">
                <input type="button" class="buttonSingle buttonSingle3 colorBackBlue" value="جستجو کنید" onclick="getRooms()" />
            </div>

        </div>
    </form>
</div>

<div class="bigbox displayBlock textAlignRight">
    <input class="buttonSingle buttonSingle4 displayInlineBlock colorBackRed" style="width :200px" value="حذف کلاس ها" onclick="rdelete()" />
    <input class="buttonSingle buttonSingle4 displayInlineBlock colorBackGreen" style="width :200px; float: left" value=" &#43; کلاس جدید" onclick="newsRoom()" />
    <input class="buttonSingle buttonSingle4 displayInlineBlock colorBackGreen" style="width :200px; float: left" value=" &#43; بروزرسانی گروهها" onclick="updateRoomChatGroup()" />
</div>

<div class="bigbox displayBlock textAlignCenter colorBackWhite" style="overflow-x: auto; padding: 10px;">
    <table cellspacing="0" class="grid">
        <tr>
            <th><input type="checkbox" id="chkAll" onclick="chkAllGrid();" /></th>
            <th>ردیف</th>
            <th>نام</th>
            <th>نوع</th>
            <th>مقطع تحصیلی</th>
            <th>پایه تحصیلی</th>
            <th>رشته تحصیلی</th>
            <th>تاریخ شروع</th>
            <th>تاریخ پایان</th>
            <th>عملیات</th>
        </tr>
        @{
            int i = 0;
        }
        @foreach (var item in Model.Rooms)
        {
            string DegreeTitle = item.Degree != null ? item.Degree.DegreeTitle : "";
            string GradeTitle = item.Grade != null ? item.Grade.GradeTitle : "";
            string StudyFieldTitle = item.StudyField != null ? item.StudyField.StudyFieldTitle : "";

            <tr>
                <td><input type="checkbox" class="chkGrid" value="@item.RoomId" /></td>
                <td>@((PageNumber - 1) * CountRow + i + 1)</td>
                <td>@Html.Raw(item.RoomTitle)</td>     
                <td>@Html.Raw(item.RoomType.RoomTypeTitle)</td>     
                <td>@Html.Raw(DegreeTitle)</td>
                <td>@Html.Raw(GradeTitle)</td>
                <td>@Html.Raw(StudyFieldTitle)</td>
                <td>@Codes.getPersianDate(item.RoomStartDate)</td>
                <td>@Codes.getPersianDate(item.RoomFinishDate)</td>
                <td>
                    <a class="operate" title="جدول برنامه" target="_blank" href="/Panel/RoomDetail/Week?id=@item.RoomId">
                        <img class="icon" src="/imagepanel/icons/schedule.png" />
                    </a>
                    <a class="operate" title="برنامه روزانه" target="_blank" href="/Panel/RoomDetail?id=@item.RoomId">
                        <img class="icon" src="/imagepanel/icons/schedule1.png" />
                    </a>
                    <a class="operate" href="#" title="انتخاب دانش آموزان/اعضا">
                        <img class="icon" src="/imagepanel/icons/roomuser.png" onclick="ruser(@item.RoomId)" />
                    </a>
                    <a class="operate" href="#" title="دانش آموزان/اعضا">
                        <img class="icon" src="/imagepanel/icons/group.png" onclick="rusercurrent(@item.RoomId)" />
                    </a>
                    <a class="operate" href="#" title="گروهها">
                        <img class="icon" src="/imagepanel/icons/chat-group.png" onclick="rchatgroup(@item.RoomId)" />
                    </a>
                    <a class="operate" href="#" title="ویرایش">
                        <img class="icon" src="/imagepanel/icons/edit.png" onclick="newsRoom(@item.RoomId)" />
                    </a>
                    <a class="operate" href="#" title="حذف">
                        <img class="icon" src="/imagepanel/icons/delete.png" onclick="rdelete(@item.RoomId)" />
                    </a>
                    <a class="operate" href="#" title="لایو">
                        <img class="icon" src="/imagepanel/icons/videocamera.png" onclick="rlive(@item.RoomId)" />
                    </a>
                    @{
                        List<RoomTeacher> roomTeachers = roomTeacherOp.GetRoomTeachersByRoomId(item.RoomId);
                        @if (roomTeachers.Count() > 0)
                        {
                            var roomTeacher = roomTeachers.First();
                            if (!string.IsNullOrEmpty(roomTeacher.JitsiLiveAddress))
                            {
                                <a class="operate" href="#" title="لایو جیتسی">
                                    <img class="icon displayBlock" src="/imagesuser/icons/iconJitsi.png" onclick="openlive_panel('jitsi','@roomTeacher.JitsiLiveAddress','@roomTeacher.JitsiLivePassword',null,null,null,null)" />
                                    <input type="hidden" id="JitsiAddress" value="@roomTeacher.JitsiLiveAddress" />
                                    <input type="hidden" id="JitsiPassword" value="@roomTeacher.JitsiLivePassword" />
                                </a>
                            }
                            if (!string.IsNullOrEmpty(roomTeacher.AdobeLiveAddress))
                            {
                                <a class="operate" href="#" title="لایو">
                                    <img class="icon displayBlock" src="/imagesuser/icons/livevideo3.png" onclick="openlive_panel('adobe', null, null,'@roomTeacher.AdobeLiveAddress','@roomTeacher.AdobeLiveUsername','@roomTeacher.AdobeLivePass')" />
                                    <input type="hidden" id="AdobeAddress" value="@roomTeacher.AdobeLiveAddress" />
                                    <input type="hidden" id="AdobeUsername" value="@roomTeacher.AdobeLiveUsername" />
                                    <input type="hidden" id="AdobePassword" value="@roomTeacher.AdobeLivePass" />
                                </a>
                            }
                            if (!string.IsNullOrEmpty(roomTeacher.ExamAddress))
                            {
                                <a class="operate" href="#" title="آزمون">
                                    <img class="icon displayBlock" src="/imagesuser/icons/exam2.png" onclick="openlive_panel('exam', null, null, null, null, null, '@roomTeacher.ExamAddress', null)" />
                                    <input type="hidden" id="ExamAddress" value="@roomTeacher.ExamAddress" />
                                </a>
                            }
                            if (!string.IsNullOrEmpty(roomTeacher.ExamAddress2))
                            {
                                <a class="operate" href="#" title="آزمون">
                                    <img class="icon displayBlock" src="/imagesuser/icons/exam2.png" onclick="openlive_panel('exam', null, null, null, null, null, '@roomTeacher.ExamAddress2', null)" />
                                    <input type="hidden" id="ExamAddress2" value="@roomTeacher.ExamAddress2" />
                                </a>
                            }
                            if (!string.IsNullOrEmpty(roomTeacher.ZoomAddress))
                            {
                                <a class="operate" href="#" title="زوم">
                                    <img class="icon displayBlock" src="/imagemember/zoom.png" onclick="openlive_panel('zoom',null,null,null,null,null,null,'@roomTeacher.ZoomAddress')" />
                                    <input type="hidden" id="ZoomAddress" value="@roomTeacher.ZoomAddress" />
                                </a>
                            }
                        }
                    }
                </td>
            </tr>

            i++;
        }

    </table>

    @if (MaxRows > 0)
    {
        @await Html.PartialAsync("Paging", MaxRows)
    }

</div>


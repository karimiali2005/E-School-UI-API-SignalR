@model RoomProperties

@{
    int RoomId = Model.Rooms.Count() > 0 ? Model.Rooms.First().RoomId : 0;
    string RoomTitle = Model.Rooms.Count() > 0 ? Model.Rooms.First().RoomTitle : "";
    string SaveButtonText = Model.Rooms.Count() > 0 ? "ویرایش شود" : "ایجاد شود";
    int RoomTypeId = 0;
    int DegreeId = 0;
    int GradeId = 0;
    int StudyFieldId = 0;

    try { DegreeId = Convert.ToInt32(Model.Rooms.First().DegreeId); } catch { DegreeId = 0; }
    try { GradeId = Convert.ToInt32(Model.Rooms.First().GradeId); } catch { GradeId = 0; }
    try { StudyFieldId = Convert.ToInt32(Model.Rooms.First().StudyFieldId); } catch { StudyFieldId = 0; }
    try { RoomTypeId = Convert.ToInt32(Model.Rooms.First().RoomTypeId); } catch { RoomTypeId = 0; }


    var degreeDefault = Model.Degrees.First() != null ? Model.Degrees.First().DegreeId : 0;
    degreeDefault = DegreeId > 0 ? DegreeId : degreeDefault;
    string displayNoneGrade = GradeId > 0 ? "" : "displayNone";
    string displayNoneStudyField = StudyFieldId > 0 ? "" : "displayNone";

    bool AllowUpdate = RoomId == 0;
    if(RoomId > 0)
    {
        RoomOp roomOp = new RoomOp();
        AllowUpdate = !roomOp.HasRoomDetails(RoomId);
    }

}

@await Html.PartialAsync("Message", new MessageModel())

<div class="bigbox colorBackWhite colorBorderGray positionRelative">    

    <form class="form textAlignCenter">

        <p id="formTitle" class="titr textAlignRight">@Html.Raw(ViewData["Title"])</p>

        <div id="diverrors" class="errors textAlignRight">
            <img src="/imagesite/icons/error.png" />
            <p id="errormsg"></p>
            <input type="text" id="focusable" />
        </div>


        <div class="row rowInline">
            <label class="lbl">نام</label>
            <input id="RoomTitle" class="chPreviousColor" type="text" value="@Html.Raw(RoomTitle)" />
        </div>

        <div class="step opacityOne" id="step1">

            @if (AllowUpdate)
            {
                <div class="row rowInline">
                    <label class="lbl">مقطع تحصیلی</label>
                    <select id="Degree" class="chPreviousColor" onchange="selectCh(this)">
                        <option value="0"></option>
                        @foreach (var degree in Model.Degrees)
                        {

                            bool selected = degree.DegreeId == DegreeId ? true : false;
                            string title = !degree.HasGrade ? "" : degree.DegreeId.ToString() + ",r";
                            if (selected)
                            {
                                <option title="@title" value="@degree.DegreeId" selected="selected">@degree.DegreeTitle</option>
                            }
                            else
                            {

                                <option title="@title" value="@degree.DegreeId">@degree.DegreeTitle</option>
                            }
                        }
                    </select>
                </div>

                <div class="row rowInline @displayNoneGrade">
                    <label class="lbl">پایه تحصیلی</label>
                    <select id="Grade" class="chPreviousColor" onchange="selectCh(this)">
                        <option value="0"></option>
                        @foreach (var grade in Model.Grades)
                        {
                            string className = grade.DegreeId == degreeDefault ? "" : "displayNone";
                            bool selected = grade.GradeId == GradeId ? true : false;
                            string title = !grade.HasStudyField ? grade.DegreeId.ToString() : grade.DegreeId.ToString() + ",r";
                            if (selected)
                            {
                                <option title="@title" value="@grade.GradeId" class="@className" selected="selected">@grade.GradeTitle</option>
                            }
                            else
                            {
                                <option title="@title" value="@grade.GradeId" class="@className">@grade.GradeTitle</option>

                            }
                        }
                    </select>
                </div>

                <div class="row rowInline @displayNoneStudyField">
                    <label class="lbl">رشته تحصیلی</label>
                    <select id="StudyField" class="chPreviousColor">
                        <option value="0"></option>
                        @foreach (var studyfield in Model.StudyFields)
                        {
                            bool selected = studyfield.StudyFieldId == StudyFieldId ? true : false;
                            if (selected)
                            {
                                <option value="@studyfield.StudyFieldId" selected="selected">@studyfield.StudyFieldTitle</option>
                            }
                            else
                            {
                                <option value="@studyfield.StudyFieldId">@studyfield.StudyFieldTitle</option>
                            }
                        }
                    </select>
                </div>

                <div class="row rowInline">
                    <label class="lbl">نوع کلاس</label>
                    <select id="roomtype" class="chPreviousColor">
                        @foreach (var roomtype in Model.RoomTypes)
                        {
                            bool selected = roomtype.RoomTypeId == RoomTypeId ? true : false;
                            if (selected)
                            {
                                <option value="@roomtype.RoomTypeId" selected="selected">@roomtype.RoomTypeTitle</option>
                            }
                            else
                            {
                                <option value="@roomtype.RoomTypeId">@roomtype.RoomTypeTitle</option>
                            }
                        }
                    </select>
                </div>

                <div class="row rowbox">
                    <div class="row rowInline2">
                        <label class="lbl">روز شروع</label>
                        <select id="StartDay" class="chPreviousColor" asp-items="ViewBag.DaysStart"></select>
                    </div>

                    <div class="row rowInline2">
                        <label class="lbl">ماه شروع</label>
                        <select id="StartMonth" class="chPreviousColor" asp-items="ViewBag.MonthsStart"></select>
                    </div>

                    <div class="row rowInline2">
                        <label class="lbl">سال شروع</label>
                        <input id="StartYear" class="chPreviousColor textAlignLeft directionLtr" type="text" pattern="[0-9]*" inputmode="numeric" placeholder="مثال: 1380" value="@ViewData["StartYear"]" />
                    </div>
                </div>

                <div class="row rowbox">
                    <div class="row rowInline2">
                        <label class="lbl">روز پایان</label>
                        <select id="FinishDay" class="chPreviousColor" asp-items="ViewBag.DaysFinish"></select>
                    </div>

                    <div class="row rowInline2">
                        <label class="lbl">ماه پایان</label>
                        <select id="FinishMonth" class="chPreviousColor" asp-items="ViewBag.MonthsFinish"></select>
                    </div>

                    <div class="row rowInline2">
                        <label class="lbl">سال پایان</label>
                        <input id="FinishYear" class="chPreviousColor textAlignLeft directionLtr" type="text" pattern="[0-9]*" inputmode="numeric" placeholder="مثال: 1380" value="@ViewData["FinishYear"]" />
                    </div>
                </div>
            }

            <div class="row rowInline">
                <label class="lbl">کلاس سر وقت شروع و اتمام یابد</label>
                <select id="closeOnTime" class="chPreviousColor" asp-items="ViewBag.CloseOnTime"></select>
            </div>

            <div class="row rowInline">
                <label class="lbl">چت برای دانش آموزان بسته باشد</label>
                <select id="CloseChat" class="chPreviousColor" asp-items="ViewBag.CloseChat"></select>
            </div>

            <div class="row rowInline">
                <label class="lbl">معلم بتواند چت دانش آموزان را ببندد</label>
                <select id="PermissionCloseChat" class="chPreviousColor" asp-items="ViewBag.PermissionCloseChat"></select>
            </div>

            <div class="row rowInline">
                <label class="lbl">معلم بتواند چت دانش آموزان را ویرایش کند</label>
                <select id="PermissionStudentChatEdit" class="chPreviousColor" asp-items="ViewBag.PermissionStudentChatEdit"></select>
            </div>

            <div class="row rowInline">
                <label class="lbl">معلم بتواند چت دانش آموزان را حذف کند</label>
                <select id="PermissionStudentChatDelete" class="chPreviousColor" asp-items="ViewBag.PermissionStudentChatDelete"></select>
            </div>


            <div class="row textAlignLeft">
                <input type="button" class="buttonSingle colorBackThirty displayInlineBlock" value="بازگشت" onclick="cancelCh()" />
                <input type="button" class="buttonSingle colorBackSeconday displayInlineBlock" value="@Html.Raw(SaveButtonText)" onclick="newsRoomed()" />
            </div>

        </div>
    </form>
</div>


<input type="hidden" id="id" value="@RoomId" />
<input type="hidden" id="returnUrl" value="@ViewData["returnUrl"]" />

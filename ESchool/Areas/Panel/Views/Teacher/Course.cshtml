@model RoomProperties

@{
    Layout = "~/Areas/Panel/Views/Shared/_Layout.cshtml";
}

@{
    var degreeDefault = Model.Degrees.First() != null ? Model.Degrees.First().DegreeId : 0;

    int PageNumber = 1;
    int DegreeId = 0;
    int GradeId = 0;
    int StudyFieldId = 0;
    int CourseId = 0;    

    try { PageNumber = Convert.ToInt32(System.Web.MyHttpContext.Current.Request.Query["pagenumber"]); } catch { PageNumber = 1; }
    PageNumber = PageNumber <= 0 ? 1 : PageNumber;
    try { DegreeId = Convert.ToInt32(System.Web.MyHttpContext.Current.Request.Query["degree"]); } catch { DegreeId = 0; }
    try { GradeId = Convert.ToInt32(System.Web.MyHttpContext.Current.Request.Query["grade"]); } catch { GradeId = 0; }
    try { StudyFieldId = Convert.ToInt32(System.Web.MyHttpContext.Current.Request.Query["studyField"]); } catch { StudyFieldId = 0; }
    try { CourseId = Convert.ToInt32(System.Web.MyHttpContext.Current.Request.Query["course"]); } catch { CourseId = 0; }    

    degreeDefault = DegreeId > 0 ? DegreeId : degreeDefault;

    string displayNoneGrade = GradeId > 0 ? "" : "displayNone";
    string displayNoneStudyField = StudyFieldId > 0 ? "" : "displayNone";
    
}

@await Html.PartialAsync("Message", new MessageModel())

<div class="bigbox colorBackWhite colorBorderGray positionRelative">

    <img class="arrow rotate" src="/imagepanel/icons/arrow_down.png" onclick="openBigBox(this)" />

    <form class="form textAlignCenter">

        <div id="diverrors" class="errors textAlignRight">
            <img src="/imagesite/icons/error.png" />
            <p id="errormsg"></p>
            <input type="text" id="focusable" />
        </div>

        <div class="step opacityOne" id="step1">
            <div class="row rowInline">
                <label class="lbl">مقطع تحصیلی</label>
                <select id="Degree" class="chPreviousColor" onchange="selectCh(this)">
                    <option value="0"></option>
                    @foreach (var degree in Model.Degrees)
                    {

                        bool selected = degree.DegreeId == DegreeId ? true : false;
                        string title = !degree.HasGrade ? "" : degree.DegreeId.ToString() + ",r";
                        if (selected)
                        {
                            <option title="@title" value="@degree.DegreeId" selected="selected">@degree.DegreeTitle</option>
                        }
                        else
                        {

                            <option title="@title" value="@degree.DegreeId">@degree.DegreeTitle</option>
                        }
                    }
                </select>
            </div>

            <div class="row rowInline @displayNoneGrade">
                <label class="lbl">پایه تحصیلی</label>
                <select id="Grade" class="chPreviousColor" onchange="selectCh(this)">
                    <option value="0"></option>
                    @foreach (var grade in Model.Grades)
                    {
                        string className = grade.DegreeId == degreeDefault ? "" : "displayNone";
                        bool selected = grade.GradeId == GradeId ? true : false;
                        string title = !grade.HasStudyField ? grade.DegreeId.ToString() : grade.DegreeId.ToString() + ",r";
                        if (selected)
                        {
                            <option title="@title" value="@grade.GradeId" class="@className" selected="selected">@grade.GradeTitle</option>
                        }
                        else
                        {
                            <option title="@title" value="@grade.GradeId" class="@className">@grade.GradeTitle</option>

                        }
                    }
                </select>
            </div>

            <div class="row rowInline @displayNoneStudyField">
                <label class="lbl">رشته تحصیلی</label>
                <select id="StudyField" class="chPreviousColor">
                    <option value="0"></option>
                    @foreach (var studyfield in Model.StudyFields)
                    {
                        bool selected = studyfield.StudyFieldId == StudyFieldId ? true : false;
                        if (selected)
                        {
                            <option value="@studyfield.StudyFieldId" selected="selected">@studyfield.StudyFieldTitle</option>
                        }
                        else
                        {
                            <option value="@studyfield.StudyFieldId">@studyfield.StudyFieldTitle</option>
                        }
                    }
                </select>
            </div>

            <div class="row rowInline">
                <label class="lbl">نام درس</label>
                <select id="Course" class="chPreviousColor" asp-items="ViewBag.Courses"></select>
            </div>

            <input type="hidden" id="returnUrl" name="returnUrl" value="@ViewData["returnUrl"]" />
            <input type="hidden" id="id" name="id" value="@ViewData["UserId"]" />

            <div class="row textAlignCenter">
                <input type="button" class="buttonSingle colorBackThirty" value="بازگشت" onclick="cancelCh()" />
                <input type="button" class="buttonSingle colorBackSeconday" value="ثبت شود" onclick="tcoursed()" />
            </div>

        </div>
    </form>
</div>

<div class="bigbox displayBlock textAlignRight">    
    <input class="buttonSingle buttonSingle4 displayInlineBlock colorBackRed" style="width :250px" value="حذف دروس انتخاب شده" onclick="tcoursedelete()" />    
</div>

<div class="bigbox displayBlock textAlignCenter colorBackWhite" style="overflow-x: auto; padding: 10px;">
    <table cellspacing="0" class="grid">
        <tr>
            <th><input type="checkbox" id="chkAll" onclick="chkAllGrid();" /></th>
            <th>ردیف</th>            
            <th>مقطع تحصیلی</th>
            <th>پایه تحصیلی</th>
            <th>رشته تحصیلی</th>
            <th>نام درس</th>       
            <th>نام معلم</th>
        </tr>
        @{
            int i = 0;
            List<TeacherCourse> teacherCourses = (List<TeacherCourse>)ViewBag.TeacherCourses;
        }
        @foreach (var item in teacherCourses)
        {
            string DegreeTitle = item.Degree != null ? item.Degree.DegreeTitle : "";
            string GradeTitle = item.Grade != null ? item.Grade.GradeTitle : "";
            string StudyFieldTitle = item.StudyField != null ? item.StudyField.StudyFieldTitle : "";
            string CourseTitle = item.Course != null ? item.Course.CourseTitle : "";

            <tr>
                <td><input type="checkbox" class="chkGrid" value="@item.TeacherCourseId" /></td>
                <td>@(i+1)</td>                
                <td>@Html.Raw(DegreeTitle)</td>
                <td>@Html.Raw(GradeTitle)</td>
                <td>@Html.Raw(StudyFieldTitle)</td>
                <td>@Html.Raw(CourseTitle)</td>                
                <td>@Html.Raw(ViewData["NickName"])</td>
            </tr>

            i++;
        }

    </table>


</div>


///
/// generated by SPToCore on 01/24/2021 17:52:31
///

using System;
using System.Data;
using System.Collections.Generic;
using Microsoft.Data.SqlClient;
using System.Threading.Tasks;
using Microsoft.EntityFrameworkCore;

namespace myStoredProcedureCalls.Model
{
    public partial class SPToCoreContext : DB_WITH_SPContext
    {
        private DbSet<HomeworkAnswerStudentShowResult> HomeworkAnswerStudentShow { get; set; }
        private DbSet<HomeworkByIDResult> HomeworkByID { get; set; }
        private DbSet<HomeworkDetailShowResult> HomeworkDetailShow { get; set; }
        private DbSet<HomeworkDetailsShowByIDResult> HomeworkDetailsShowByID { get; set; }
        private DbSet<HomeworkShowResult> HomeworkShow { get; set; }
        private DbSet<LoginUserResult> LoginUser { get; set; }
        private DbSet<RoomChatContactResult> RoomChatContact { get; set; }
        private DbSet<RoomChatGroupByIDResult> RoomChatGroupByID { get; set; }
        private DbSet<RoomChatGroupMemberResult> RoomChatGroupMember { get; set; }
        private DbSet<RoomChatLeftPropertyResult> RoomChatLeftProperty { get; set; }
        private DbSet<RoomChatLeftShowResult> RoomChatLeftShow { get; set; }
        private DbSet<RoomChatRightShowResult> RoomChatRightShow { get; set; }
        private DbSet<RoomLiveShowResult> RoomLiveShow { get; set; }
        private DbSet<ScoreTypeDetailShowResult> ScoreTypeDetailShow { get; set; }

        public SPToCoreContext()
        {
        }

        public SPToCoreContext(DbContextOptions<DB_WITH_SPContext> options)
            : base(options)
        {
        }               

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {            
            // No key            
            modelBuilder.Query<HomeworkAnswerStudentShowResult>().HasNoKey();
            modelBuilder.Query<HomeworkByIDResult>().HasNoKey();
            modelBuilder.Query<HomeworkDetailShowResult>().HasNoKey();
            modelBuilder.Query<HomeworkDetailsShowByIDResult>().HasNoKey();
            modelBuilder.Query<HomeworkShowResult>().HasNoKey();
            modelBuilder.Query<LoginUserResult>().HasNoKey();
            modelBuilder.Query<RoomChatContactResult>().HasNoKey();
            modelBuilder.Query<RoomChatGroupByIDResult>().HasNoKey();
            modelBuilder.Query<RoomChatGroupMemberResult>().HasNoKey();
            modelBuilder.Query<RoomChatLeftPropertyResult>().HasNoKey();
            modelBuilder.Query<RoomChatLeftShowResult>().HasNoKey();
            modelBuilder.Query<RoomChatRightShowResult>().HasNoKey();
            modelBuilder.Query<RoomLiveShowResult>().HasNoKey();
            modelBuilder.Query<ScoreTypeDetailShowResult>().HasNoKey();
            //Thanks Valecass!!!
            base.OnModelCreating(modelBuilder);
        }

        public async Task<List<HomeworkAnswerStudentShowResult>> HomeworkAnswerStudentShowAsync(int? UserID,int? CourseID,int? RoomID,int? PageNumber,int? PageSize)
        {
            //Initialize Result 
            List<HomeworkAnswerStudentShowResult> lst = new List<HomeworkAnswerStudentShowResult>();

                // Parameters
                SqlParameter p_UserID = new SqlParameter("@UserID", UserID ?? (object)DBNull.Value);
                p_UserID.Direction = ParameterDirection.Input;
                p_UserID.DbType = DbType.Int32;
                p_UserID.Size = 4;

                SqlParameter p_CourseID = new SqlParameter("@CourseID", CourseID ?? (object)DBNull.Value);
                p_CourseID.Direction = ParameterDirection.Input;
                p_CourseID.DbType = DbType.Int32;
                p_CourseID.Size = 4;

                SqlParameter p_RoomID = new SqlParameter("@RoomID", RoomID ?? (object)DBNull.Value);
                p_RoomID.Direction = ParameterDirection.Input;
                p_RoomID.DbType = DbType.Int32;
                p_RoomID.Size = 4;

                SqlParameter p_PageNumber = new SqlParameter("@PageNumber", PageNumber ?? (object)DBNull.Value);
                p_PageNumber.Direction = ParameterDirection.Input;
                p_PageNumber.DbType = DbType.Int32;
                p_PageNumber.Size = 4;

                SqlParameter p_PageSize = new SqlParameter("@PageSize", PageSize ?? (object)DBNull.Value);
                p_PageSize.Direction = ParameterDirection.Input;
                p_PageSize.DbType = DbType.Int32;
                p_PageSize.Size = 4;


                // Processing 
                string sqlQuery = $@"EXEC [dbo].[HomeworkAnswerStudentShow] @UserID, @CourseID, @RoomID, @PageNumber, @PageSize";
                
                //Output Data
                lst = await this.HomeworkAnswerStudentShow.FromSqlRaw(sqlQuery , p_UserID , p_CourseID , p_RoomID , p_PageNumber , p_PageSize ).ToListAsync();

            //Return
            return lst;
        }

        public async Task<List<HomeworkByIDResult>> HomeworkByIDAsync(int? UserID,int? HoomeworkID)
        {
            //Initialize Result 
            List<HomeworkByIDResult> lst = new List<HomeworkByIDResult>();

                // Parameters
                SqlParameter p_UserID = new SqlParameter("@UserID", UserID ?? (object)DBNull.Value);
                p_UserID.Direction = ParameterDirection.Input;
                p_UserID.DbType = DbType.Int32;
                p_UserID.Size = 4;

                SqlParameter p_HoomeworkID = new SqlParameter("@HoomeworkID", HoomeworkID ?? (object)DBNull.Value);
                p_HoomeworkID.Direction = ParameterDirection.Input;
                p_HoomeworkID.DbType = DbType.Int32;
                p_HoomeworkID.Size = 4;


                // Processing 
                string sqlQuery = $@"EXEC [dbo].[HomeworkByID] @UserID, @HoomeworkID";
                
                //Output Data
                lst = await this.HomeworkByID.FromSqlRaw(sqlQuery , p_UserID , p_HoomeworkID ).ToListAsync();

            //Return
            return lst;
        }

        public async Task<List<HomeworkDetailShowResult>> HomeworkDetailShowAsync(int? HomeworkID,int? UserID)
        {
            //Initialize Result 
            List<HomeworkDetailShowResult> lst = new List<HomeworkDetailShowResult>();

                // Parameters
                SqlParameter p_HomeworkID = new SqlParameter("@HomeworkID", HomeworkID ?? (object)DBNull.Value);
                p_HomeworkID.Direction = ParameterDirection.Input;
                p_HomeworkID.DbType = DbType.Int32;
                p_HomeworkID.Size = 4;

                SqlParameter p_UserID = new SqlParameter("@UserID", UserID ?? (object)DBNull.Value);
                p_UserID.Direction = ParameterDirection.Input;
                p_UserID.DbType = DbType.Int32;
                p_UserID.Size = 4;


                // Processing 
                string sqlQuery = $@"EXEC [dbo].[HomeworkDetailShow] @HomeworkID, @UserID";
                
                //Output Data
                lst = await this.HomeworkDetailShow.FromSqlRaw(sqlQuery , p_HomeworkID , p_UserID ).ToListAsync();

            //Return
            return lst;
        }

        public async Task<List<HomeworkDetailsShowByIDResult>> HomeworkDetailsShowByIDAsync(int? HomeworkID,int? UserID)
        {
            //Initialize Result 
            List<HomeworkDetailsShowByIDResult> lst = new List<HomeworkDetailsShowByIDResult>();

                // Parameters
                SqlParameter p_HomeworkID = new SqlParameter("@HomeworkID", HomeworkID ?? (object)DBNull.Value);
                p_HomeworkID.Direction = ParameterDirection.Input;
                p_HomeworkID.DbType = DbType.Int32;
                p_HomeworkID.Size = 4;

                SqlParameter p_UserID = new SqlParameter("@UserID", UserID ?? (object)DBNull.Value);
                p_UserID.Direction = ParameterDirection.Input;
                p_UserID.DbType = DbType.Int32;
                p_UserID.Size = 4;


                // Processing 
                string sqlQuery = $@"EXEC [dbo].[HomeworkDetailsShowByID] @HomeworkID, @UserID";
                
                //Output Data
                lst = await this.HomeworkDetailsShowByID.FromSqlRaw(sqlQuery , p_HomeworkID , p_UserID ).ToListAsync();

            //Return
            return lst;
        }

        public async Task<List<HomeworkShowResult>> HomeworkShowAsync(int? UserID,int? CourseID,int? RoomID,int? PageNumber,int? PageSize)
        {
            //Initialize Result 
            List<HomeworkShowResult> lst = new List<HomeworkShowResult>();

                // Parameters
                SqlParameter p_UserID = new SqlParameter("@UserID", UserID ?? (object)DBNull.Value);
                p_UserID.Direction = ParameterDirection.Input;
                p_UserID.DbType = DbType.Int32;
                p_UserID.Size = 4;

                SqlParameter p_CourseID = new SqlParameter("@CourseID", CourseID ?? (object)DBNull.Value);
                p_CourseID.Direction = ParameterDirection.Input;
                p_CourseID.DbType = DbType.Int32;
                p_CourseID.Size = 4;

                SqlParameter p_RoomID = new SqlParameter("@RoomID", RoomID ?? (object)DBNull.Value);
                p_RoomID.Direction = ParameterDirection.Input;
                p_RoomID.DbType = DbType.Int32;
                p_RoomID.Size = 4;

                SqlParameter p_PageNumber = new SqlParameter("@PageNumber", PageNumber ?? (object)DBNull.Value);
                p_PageNumber.Direction = ParameterDirection.Input;
                p_PageNumber.DbType = DbType.Int32;
                p_PageNumber.Size = 4;

                SqlParameter p_PageSize = new SqlParameter("@PageSize", PageSize ?? (object)DBNull.Value);
                p_PageSize.Direction = ParameterDirection.Input;
                p_PageSize.DbType = DbType.Int32;
                p_PageSize.Size = 4;


                // Processing 
                string sqlQuery = $@"EXEC [dbo].[HomeworkShow] @UserID, @CourseID, @RoomID, @PageNumber, @PageSize";
                
                //Output Data
                lst = await this.HomeworkShow.FromSqlRaw(sqlQuery , p_UserID , p_CourseID , p_RoomID , p_PageNumber , p_PageSize ).ToListAsync();

            //Return
            return lst;
        }

        public void HomeworkUpdate(int? HomeworkID,DateTime? HomeworkStartDate,DateTime? HomeworkFineshDate,string HomeworkDescription,string HomeworkTile,int? HomeworkTypeId,int? ScoreTypeId,string HomeWorkFileName)
        {

                // Parameters
                SqlParameter p_HomeworkID = new SqlParameter("@HomeworkID", HomeworkID ?? (object)DBNull.Value);
                p_HomeworkID.Direction = ParameterDirection.Input;
                p_HomeworkID.DbType = DbType.Int32;
                p_HomeworkID.Size = 4;

                SqlParameter p_HomeworkStartDate = new SqlParameter("@HomeworkStartDate", HomeworkStartDate ?? (object)DBNull.Value);
                p_HomeworkStartDate.Direction = ParameterDirection.Input;
                p_HomeworkStartDate.DbType = DbType.DateTime;
                p_HomeworkStartDate.Size = 8;

                SqlParameter p_HomeworkFineshDate = new SqlParameter("@HomeworkFineshDate", HomeworkFineshDate ?? (object)DBNull.Value);
                p_HomeworkFineshDate.Direction = ParameterDirection.Input;
                p_HomeworkFineshDate.DbType = DbType.DateTime;
                p_HomeworkFineshDate.Size = 8;

                SqlParameter p_HomeworkDescription = new SqlParameter("@HomeworkDescription", HomeworkDescription ?? (object)DBNull.Value);
                p_HomeworkDescription.Direction = ParameterDirection.Input;
                p_HomeworkDescription.DbType = DbType.String;
                p_HomeworkDescription.Size = -1;

                SqlParameter p_HomeworkTile = new SqlParameter("@HomeworkTile", HomeworkTile ?? (object)DBNull.Value);
                p_HomeworkTile.Direction = ParameterDirection.Input;
                p_HomeworkTile.DbType = DbType.String;
                p_HomeworkTile.Size = 400;

                SqlParameter p_HomeworkTypeId = new SqlParameter("@HomeworkTypeId", HomeworkTypeId ?? (object)DBNull.Value);
                p_HomeworkTypeId.Direction = ParameterDirection.Input;
                p_HomeworkTypeId.DbType = DbType.Int32;
                p_HomeworkTypeId.Size = 4;

                SqlParameter p_ScoreTypeId = new SqlParameter("@ScoreTypeId", ScoreTypeId ?? (object)DBNull.Value);
                p_ScoreTypeId.Direction = ParameterDirection.Input;
                p_ScoreTypeId.DbType = DbType.Int32;
                p_ScoreTypeId.Size = 4;

                SqlParameter p_HomeWorkFileName = new SqlParameter("@HomeWorkFileName", HomeWorkFileName ?? (object)DBNull.Value);
                p_HomeWorkFileName.Direction = ParameterDirection.Input;
                p_HomeWorkFileName.DbType = DbType.String;
                p_HomeWorkFileName.Size = 400;


                // Processing 
                string sqlQuery = $@"EXEC [dbo].[HomeworkUpdate] @HomeworkID, @HomeworkStartDate, @HomeworkFineshDate, @HomeworkDescription, @HomeworkTile, @HomeworkTypeId, @ScoreTypeId, @HomeWorkFileName";
                //Execution
                this.Database.ExecuteSqlRaw(sqlQuery , p_HomeworkID , p_HomeworkStartDate , p_HomeworkFineshDate , p_HomeworkDescription , p_HomeworkTile , p_HomeworkTypeId , p_ScoreTypeId , p_HomeWorkFileName );

            //Return
        }

        public async Task<List<LoginUserResult>> LoginUserAsync(string UserName,string UserPass)
        {
            //Initialize Result 
            List<LoginUserResult> lst = new List<LoginUserResult>();

                // Parameters
                SqlParameter p_UserName = new SqlParameter("@UserName", UserName ?? (object)DBNull.Value);
                p_UserName.Direction = ParameterDirection.Input;
                p_UserName.DbType = DbType.String;
                p_UserName.Size = 20;

                SqlParameter p_UserPass = new SqlParameter("@UserPass", UserPass ?? (object)DBNull.Value);
                p_UserPass.Direction = ParameterDirection.Input;
                p_UserPass.DbType = DbType.String;
                p_UserPass.Size = 1000;


                // Processing 
                string sqlQuery = $@"EXEC [dbo].[LoginUser] @UserName, @UserPass";
                
                //Output Data
                lst = await this.LoginUser.FromSqlRaw(sqlQuery , p_UserName , p_UserPass ).ToListAsync();

            //Return
            return lst;
        }

        public async Task<List<RoomChatContactResult>> RoomChatContactAsync(int? UserID)
        {
            //Initialize Result 
            List<RoomChatContactResult> lst = new List<RoomChatContactResult>();

                // Parameters
                SqlParameter p_UserID = new SqlParameter("@UserID", UserID ?? (object)DBNull.Value);
                p_UserID.Direction = ParameterDirection.Input;
                p_UserID.DbType = DbType.Int32;
                p_UserID.Size = 4;


                // Processing 
                string sqlQuery = $@"EXEC [dbo].[RoomChatContact] @UserID";
                
                //Output Data
                lst = await this.RoomChatContact.FromSqlRaw(sqlQuery , p_UserID ).ToListAsync();

            //Return
            return lst;
        }

        public void RoomChatDeleteAll(int? RoomChatGroupID,int? UserID)
        {

                // Parameters
                SqlParameter p_RoomChatGroupID = new SqlParameter("@RoomChatGroupID", RoomChatGroupID ?? (object)DBNull.Value);
                p_RoomChatGroupID.Direction = ParameterDirection.Input;
                p_RoomChatGroupID.DbType = DbType.Int32;
                p_RoomChatGroupID.Size = 4;

                SqlParameter p_UserID = new SqlParameter("@UserID", UserID ?? (object)DBNull.Value);
                p_UserID.Direction = ParameterDirection.Input;
                p_UserID.DbType = DbType.Int32;
                p_UserID.Size = 4;


                // Processing 
                string sqlQuery = $@"EXEC [dbo].[RoomChatDeleteAll] @RoomChatGroupID, @UserID";
                //Execution
                this.Database.ExecuteSqlRaw(sqlQuery , p_RoomChatGroupID , p_UserID );

            //Return
        }

        public async Task<List<RoomChatGroupByIDResult>> RoomChatGroupByIDAsync(int? UserID)
        {
            //Initialize Result 
            List<RoomChatGroupByIDResult> lst = new List<RoomChatGroupByIDResult>();

                // Parameters
                SqlParameter p_UserID = new SqlParameter("@UserID", UserID ?? (object)DBNull.Value);
                p_UserID.Direction = ParameterDirection.Input;
                p_UserID.DbType = DbType.Int32;
                p_UserID.Size = 4;


                // Processing 
                string sqlQuery = $@"EXEC [dbo].[RoomChatGroupByID] @UserID";
                
                //Output Data
                lst = await this.RoomChatGroupByID.FromSqlRaw(sqlQuery , p_UserID ).ToListAsync();

            //Return
            return lst;
        }

        public void RoomChatGroupInsert()
        {


                // Processing 
                string sqlQuery = $@"EXEC [dbo].[RoomChatGroupInsert] ";
                //Execution
                this.Database.ExecuteSqlRaw(sqlQuery );

            //Return
        }

        public async Task<List<RoomChatGroupMemberResult>> RoomChatGroupMemberAsync(int? RoomChatGroupID)
        {
            //Initialize Result 
            List<RoomChatGroupMemberResult> lst = new List<RoomChatGroupMemberResult>();

                // Parameters
                SqlParameter p_RoomChatGroupID = new SqlParameter("@RoomChatGroupID", RoomChatGroupID ?? (object)DBNull.Value);
                p_RoomChatGroupID.Direction = ParameterDirection.Input;
                p_RoomChatGroupID.DbType = DbType.Int32;
                p_RoomChatGroupID.Size = 4;


                // Processing 
                string sqlQuery = $@"EXEC [dbo].[RoomChatGroupMember] @RoomChatGroupID";
                
                //Output Data
                lst = await this.RoomChatGroupMember.FromSqlRaw(sqlQuery , p_RoomChatGroupID ).ToListAsync();

            //Return
            return lst;
        }

        public async Task<List<RoomChatLeftPropertyResult>> RoomChatLeftPropertyAsync(int? RoomID,int? RoomChatGroupID)
        {
            //Initialize Result 
            List<RoomChatLeftPropertyResult> lst = new List<RoomChatLeftPropertyResult>();

                // Parameters
                SqlParameter p_RoomID = new SqlParameter("@RoomID", RoomID ?? (object)DBNull.Value);
                p_RoomID.Direction = ParameterDirection.Input;
                p_RoomID.DbType = DbType.Int32;
                p_RoomID.Size = 4;

                SqlParameter p_RoomChatGroupID = new SqlParameter("@RoomChatGroupID", RoomChatGroupID ?? (object)DBNull.Value);
                p_RoomChatGroupID.Direction = ParameterDirection.Input;
                p_RoomChatGroupID.DbType = DbType.Int32;
                p_RoomChatGroupID.Size = 4;


                // Processing 
                string sqlQuery = $@"EXEC [dbo].[RoomChatLeftProperty] @RoomID, @RoomChatGroupID";
                
                //Output Data
                lst = await this.RoomChatLeftProperty.FromSqlRaw(sqlQuery , p_RoomID , p_RoomChatGroupID ).ToListAsync();

            //Return
            return lst;
        }

        public async Task<List<RoomChatLeftShowResult>> RoomChatLeftShowAsync(int? RoomChatGroupID,bool? TagLearn,int? UserID,bool? HasNewChat,int? PageNumber,int? PageSize,int? MessageNewNumber,ref int? RoomChatViewLast)
        {
            //Initialize Result 
            List<RoomChatLeftShowResult> lst = new List<RoomChatLeftShowResult>();

                // Parameters
                SqlParameter p_RoomChatGroupID = new SqlParameter("@RoomChatGroupID", RoomChatGroupID ?? (object)DBNull.Value);
                p_RoomChatGroupID.Direction = ParameterDirection.Input;
                p_RoomChatGroupID.DbType = DbType.Int32;
                p_RoomChatGroupID.Size = 4;

                SqlParameter p_TagLearn = new SqlParameter("@TagLearn", TagLearn ?? (object)DBNull.Value);
                p_TagLearn.Direction = ParameterDirection.Input;
                p_TagLearn.DbType = DbType.Boolean;
                p_TagLearn.Size = 1;

                SqlParameter p_UserID = new SqlParameter("@UserID", UserID ?? (object)DBNull.Value);
                p_UserID.Direction = ParameterDirection.Input;
                p_UserID.DbType = DbType.Int32;
                p_UserID.Size = 4;

                SqlParameter p_HasNewChat = new SqlParameter("@HasNewChat", HasNewChat ?? (object)DBNull.Value);
                p_HasNewChat.Direction = ParameterDirection.Input;
                p_HasNewChat.DbType = DbType.Boolean;
                p_HasNewChat.Size = 1;

                SqlParameter p_PageNumber = new SqlParameter("@PageNumber", PageNumber ?? (object)DBNull.Value);
                p_PageNumber.Direction = ParameterDirection.Input;
                p_PageNumber.DbType = DbType.Int32;
                p_PageNumber.Size = 4;

                SqlParameter p_PageSize = new SqlParameter("@PageSize", PageSize ?? (object)DBNull.Value);
                p_PageSize.Direction = ParameterDirection.Input;
                p_PageSize.DbType = DbType.Int32;
                p_PageSize.Size = 4;

                SqlParameter p_MessageNewNumber = new SqlParameter("@MessageNewNumber", MessageNewNumber ?? (object)DBNull.Value);
                p_MessageNewNumber.Direction = ParameterDirection.Input;
                p_MessageNewNumber.DbType = DbType.Int32;
                p_MessageNewNumber.Size = 4;

                SqlParameter p_RoomChatViewLast = new SqlParameter("@RoomChatViewLast", RoomChatViewLast ?? (object)DBNull.Value);
                p_RoomChatViewLast.Direction = ParameterDirection.Output;
                p_RoomChatViewLast.DbType = DbType.Int32;
                p_RoomChatViewLast.Size = 4;


                // Processing 
                string sqlQuery = $@"EXEC [dbo].[RoomChatLeftShow] @RoomChatGroupID, @TagLearn, @UserID, @HasNewChat, @PageNumber, @PageSize, @MessageNewNumber, @RoomChatViewLast OUTPUT";
                
                //Output Data
                lst = await this.RoomChatLeftShow.FromSqlRaw(sqlQuery , p_RoomChatGroupID , p_TagLearn , p_UserID , p_HasNewChat , p_PageNumber , p_PageSize , p_MessageNewNumber , p_RoomChatViewLast ).ToListAsync();
                
                //Output Params
                RoomChatViewLast = (int?)p_RoomChatViewLast.Value;

            //Return
            return lst;
        }

        public async Task<List<RoomChatRightShowResult>> RoomChatRightShowAsync(int? UserID,int? UserTypeID)
        {
            //Initialize Result 
            List<RoomChatRightShowResult> lst = new List<RoomChatRightShowResult>();

                // Parameters
                SqlParameter p_UserID = new SqlParameter("@UserID", UserID ?? (object)DBNull.Value);
                p_UserID.Direction = ParameterDirection.Input;
                p_UserID.DbType = DbType.Int32;
                p_UserID.Size = 4;

                SqlParameter p_UserTypeID = new SqlParameter("@UserTypeID", UserTypeID ?? (object)DBNull.Value);
                p_UserTypeID.Direction = ParameterDirection.Input;
                p_UserTypeID.DbType = DbType.Int32;
                p_UserTypeID.Size = 4;


                // Processing 
                string sqlQuery = $@"EXEC [dbo].[RoomChatRightShow] @UserID, @UserTypeID";
                
                //Output Data
                lst = await this.RoomChatRightShow.FromSqlRaw(sqlQuery , p_UserID , p_UserTypeID ).ToListAsync();

            //Return
            return lst;
        }

        public async Task<List<RoomLiveShowResult>> RoomLiveShowAsync(int? UserID)
        {
            //Initialize Result 
            List<RoomLiveShowResult> lst = new List<RoomLiveShowResult>();

                // Parameters
                SqlParameter p_UserID = new SqlParameter("@UserID", UserID ?? (object)DBNull.Value);
                p_UserID.Direction = ParameterDirection.Input;
                p_UserID.DbType = DbType.Int32;
                p_UserID.Size = 4;


                // Processing 
                string sqlQuery = $@"EXEC [dbo].[RoomLiveShow] @UserID";
                
                //Output Data
                lst = await this.RoomLiveShow.FromSqlRaw(sqlQuery , p_UserID ).ToListAsync();

            //Return
            return lst;
        }

        public async Task<List<ScoreTypeDetailShowResult>> ScoreTypeDetailShowAsync()
        {
            //Initialize Result 
            List<ScoreTypeDetailShowResult> lst = new List<ScoreTypeDetailShowResult>();


                // Processing 
                string sqlQuery = $@"EXEC [dbo].[ScoreTypeDetailShow] ";
                
                //Output Data
                lst = await this.ScoreTypeDetailShow.FromSqlRaw(sqlQuery ).ToListAsync();

            //Return
            return lst;
        }


        public class HomeworkAnswerStudentShowResult
        {
            public int HomeworkID { get; set; }
            public string HomeworkTile { get; set; }
            public string HomeworkDescription { get; set; }
            public DateTime? HomeworkStartDate { get; set; }
            public DateTime? HomeworkFinishDate { get; set; }
            public int HomeworkTypeID { get; set; }
            public int UserID { get; set; }
            public int CourseID { get; set; }
            public int RoomID { get; set; }
            public int HomeworkAnswerStatusID { get; set; }
            public string HomeworkAnswerStatusTitle { get; set; }
            public int HomeworkAnswerID { get; set; }
            public DateTime? VisitDateTime { get; set; }
            public DateTime? EditDateTime { get; set; }
            public DateTime? SendDatetime { get; set; }
            public int? ScoreTypeID { get; set; }
            public string HomeworkAnswerScore { get; set; }
            public string TeacherComment { get; set; }
            public int? RecordCount { get; set; }
        }

        public class HomeworkByIDResult
        {
            public int HomeworkID { get; set; }
            public int CourseID { get; set; }
            public string HomeworkTile { get; set; }
            public string HomeworkDescription { get; set; }
            public int HomeworkTypeID { get; set; }
            public int? ScoreTypeID { get; set; }
            public string HomeWorkFileName { get; set; }
            public int UserIdTeacher { get; set; }
            public int HomeworkAnswerID { get; set; }
            public int HomeworkAnswerStatusID { get; set; }
            public DateTime? VisitDateTime { get; set; }
            public DateTime? EditDateTime { get; set; }
            public DateTime? SendDatetime { get; set; }
            public DateTime? HomeworkAnswerSartDate { get; set; }
            public DateTime? HomeworkAnswerFinishDate { get; set; }
            public string TeacherComment { get; set; }
            public int? HomeworkAnswerDescriptiveID { get; set; }
            public int? HomeworkAnswerScore { get; set; }
            public string HomeworkAnswerComment { get; set; }
            public string HomeworkResponse { get; set; }
            public string FileName { get; set; }
            public int? HomeworkAnswerFileID { get; set; }
            public int UserID { get; set; }
            public int RoomID { get; set; }
        }

        public class HomeworkDetailShowResult
        {
            public int UserID { get; set; }
            public string PicName { get; set; }
            public string FullName { get; set; }
            public int HomeworkID { get; set; }
            public int? HomeworkAnswerID { get; set; }
            public int? HomeworkAnswerStatusID { get; set; }
            public DateTime? SendDatetime { get; set; }
            public DateTime? HomeworkAnswerSartDate { get; set; }
            public DateTime? HomeworkAnswerFinishDate { get; set; }
            public string TeacherComment { get; set; }
            public int? HomeworkAnswerScore { get; set; }
            public int? HomeworkAnswerDescriptiveID { get; set; }
            public string HomeworkResponse { get; set; }
            public string HomeworkAnswerComment { get; set; }
            public DateTime? VisitDateTime { get; set; }
            public DateTime? EditDateTime { get; set; }
            public string FinalScore { get; set; }
            public string HomeworkAnswerStatusTitle { get; set; }
            public bool HomeworkAnswerTeacherSee { get; set; }
        }

        public class HomeworkDetailsShowByIDResult
        {
            public int HomeworkAnswerID { get; set; }
            public int HomeworkAnswerStatusID { get; set; }
            public string HomeworkAnswerStatusTitle { get; set; }
            public DateTime? VisitDateTime { get; set; }
            public DateTime? EditDateTime { get; set; }
            public DateTime? SendDatetime { get; set; }
            public int UserID { get; set; }
            public string PicName { get; set; }
            public string FullName { get; set; }
            public string HomeworkResponse { get; set; }
            public string HomeworkAnswerComment { get; set; }
            public int? HomeworkAnswerScore { get; set; }
            public int? HomeworkAnswerDescriptiveID { get; set; }
            public string TeacherComment { get; set; }
            public DateTime? HomeworkAnswerSartDate { get; set; }
            public DateTime? HomeworkAnswerFinishDate { get; set; }
            public int? HomeworkAnswerFileID { get; set; }
            public string FileName { get; set; }
            public int? ScoreTypeID { get; set; }
            public bool IsNumber { get; set; }
        }

        public class HomeworkShowResult
        {
            public int HomeworkID { get; set; }
            public string HomeworkTile { get; set; }
            public string HomeworkDescription { get; set; }
            public int HomeworkTypeID { get; set; }
            public int ScoreTypeID { get; set; }
            public string ScoreTypeTitle { get; set; }
            public DateTime? HomeworkStartDate { get; set; }
            public DateTime? HomeworkFinishDate { get; set; }
            public int? StudentAllNumber { get; set; }
            public int StudentAnswerNumber { get; set; }
            public int? RecordCount { get; set; }
        }

        public class LoginUserResult
        {
            public int UserID { get; set; }
            public string FullName { get; set; }
            public string IRNational { get; set; }
            public DateTime BirthDate { get; set; }
            public int UserTypeID { get; set; }
            public string UserTypeTitle { get; set; }
            public int? UserActive { get; set; }
            public string ReasonInactive { get; set; }
            public string MobileNumber { get; set; }
            public string PicName { get; set; }
            public string Password { get; set; }
            public string ExamAddress { get; set; }
        }

        public class RoomChatContactResult
        {
            public int UserID { get; set; }
            public string PicName { get; set; }
            public string FullName { get; set; }
        }

        public class RoomChatGroupByIDResult
        {
            public int RoomChatGroupID { get; set; }
        }

        public class RoomChatGroupMemberResult
        {
            public int UserID { get; set; }
            public string FullName { get; set; }
            public string PicName { get; set; }
        }

        public class RoomChatLeftPropertyResult
        {
            public bool CloseOnTime { get; set; }
            public bool CloseChat { get; set; }
            public bool PermissionCloseChat { get; set; }
            public bool PermissionStudentChatEdit { get; set; }
            public bool PermissionStudentChatDelete { get; set; }
            public string JitsiLiveAddress { get; set; }
            public string JitsiLivePassword { get; set; }
            public string AdobeLiveAddress { get; set; }
            public string AdobeLiveUsername { get; set; }
            public string AdobeLivePass { get; set; }
            public string ExamAddress { get; set; }
            public int? PinRoomChatID { get; set; }
            public string PinTextChat { get; set; }
        }

        public class RoomChatLeftShowResult
        {
            public int RoomChatID { get; set; }
            public DateTime RoomChatDate { get; set; }
            public int SenderID { get; set; }
            public string SenderName { get; set; }
            public int? RecieverID { get; set; }
            public string RecieverName { get; set; }
            public int? RoomID { get; set; }
            public int? TeacherID { get; set; }
            public int? CourseID { get; set; }
            public string TextChat { get; set; }
            public string Filename { get; set; }
            public bool TagLearn { get; set; }
            public bool RoomChatDelete { get; set; }
            public DateTime? RoomChatUpdate { get; set; }
            public int? RoomChatParentID { get; set; }
            public bool AttachMsg { get; set; }
            public int? RoomChatGroupID { get; set; }
            public string ParentSenderName { get; set; }
            public string ParentTextChat { get; set; }
            public int? RoomChatViewNumber { get; set; }
            public string MimeType { get; set; }
        }

        public class RoomChatRightShowResult
        {
            public int RoomChatGroupID { get; set; }
            public int RoomChatGroupType { get; set; }
            public int? CourseID { get; set; }
            public int? TeacherID { get; set; }
            public int? RoomID { get; set; }
            public string RoomChatTitle { get; set; }
            public DateTime? RoomChatDate { get; set; }
            public string TextChat { get; set; }
            public int MessageNewNumber { get; set; }
            public int HomeWorkNewNumber { get; set; }
            public string PicName { get; set; }
        }

        public class RoomLiveShowResult
        {
            public string JitsiLiveAddress { get; set; }
            public string JitsiLivePassword { get; set; }
            public string AdobeLiveAddress { get; set; }
            public string AdobeLiveUsername { get; set; }
            public string AdobeLivePass { get; set; }
            public string ExamAddress { get; set; }
            public string RoomChatGroupTitle { get; set; }
        }

        public class ScoreTypeDetailShowResult
        {
            public int ScoreTypeID { get; set; }
            public string ScoreTypeTitle { get; set; }
            public bool IsNumber { get; set; }
            public string SumScoreTypeDetailTitle { get; set; }
        }

    }
}